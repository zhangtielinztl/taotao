<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
	http://www.springframework.org/schema/util/spring-util-4.2.xsd">
    <!-- 扫描service 不只是扫描包好可以开启注解 -->
    <context:component-scan
            base-package="com.taotao.sso.service"></context:component-scan>
    <!-- 加载配置文件 -->
    <context:property-placeholder
            location="classpath:*.properties"/>
    <!-- 数据库连接池 -->
    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="5"/>
    </bean>
    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation"
                  value="classpath:SqlMapConfig.xml"/>
    </bean>
    <!-- 扫描mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.taotao.mapper"/>
    </bean>
    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 通知 -->
    <tx:advice id="txAdvice"
               transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS"
                       read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS"
                       read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS"
                       read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- 切面 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.taotao.sso.service.*.*(..))"/>
    </aop:config>
    <!-- 单机版redis -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="host" value="192.168.25.153"></constructor-arg>
        <constructor-arg name="port" value="6379"></constructor-arg>
    </bean>
    <bean id="jedisClientPool" class="com.taotao.jedis.JedisClientPool"/>

    <!-- 集群版的redis <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg> <set> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg
        name="host" value="192.168.25.153"></constructor-arg> <constructor-arg name="port"
        value="7001"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort">
        <constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg
        name="port" value="7002"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort">
        <constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg
        name="port" value="7003"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort">
        <constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg
        name="port" value="7004"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort">
        <constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg
        name="port" value="7005"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort">
        <constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg
        name="port" value="7006"></constructor-arg> </bean> </set> </constructor-arg>
        </bean> <bean id="jedisClientCluster" class="com.taotao.jedis.JedisClientCluster"
        /> <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster"> <constructor-arg>
        <set> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg name="host"
        value="192.168.25.153"></constructor-arg> <constructor-arg name="port" value="7001"></constructor-arg>
        </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg name="host"
        value="192.168.25.153"></constructor-arg> <constructor-arg name="port" value="7002"></constructor-arg>
        </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg name="host"
        value="192.168.25.153"></constructor-arg> <constructor-arg name="port" value="7003"></constructor-arg>
        </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg name="host"
        value="192.168.25.153"></constructor-arg> <constructor-arg name="port" value="7004"></constructor-arg>
        </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg name="host"
        value="192.168.25.153"></constructor-arg> <constructor-arg name="port" value="7005"></constructor-arg>
        </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg name="host"
        value="192.168.25.153"></constructor-arg> <constructor-arg name="port" value="7006"></constructor-arg>
        </bean> </set> </constructor-arg> </bean> <bean id="jedisClientCluster" class="com.taotao.jedis.JedisClientCluster"/> -->
    <!-- 使用dubbo发布服务 -->

    <dubbo:application name="taotao-content"/>
    <dubbo:registry protocol="zookeeper"
                    address="192.168.25.167:2181"/>
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20884"/>
    <!-- 声明需要暴露的服务接口 interface：服务接口的全类名 ref：接口实现类   -->

    <dubbo:service interface="com.taotao.sso.service.UserService" ref="userServiceImpl" timeout="30000"/>

</beans>